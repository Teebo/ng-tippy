{"version":3,"file":"ng-tippy.umd.js.map","sources":["ng://ng-tippy/src/Tippy.service.ts","ng://ng-tippy/src/Tippy.directive.ts","ng://ng-tippy/src/Tippy.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TippyService {\n  private _tippyTooltipStates = new Map();\n  tippyTooltipStates = new BehaviorSubject(new Map());\n\n  setTippyState(name, state): void {\n    this._tippyTooltipStates.set(name, state);\n    this.tippyTooltipStates.next(this._tippyTooltipStates);\n  }\n\n  getTippyState(name): any {\n    return this._tippyTooltipStates.has(name) ? this._tippyTooltipStates.get(name) : null;\n  }\n\n  getAllTippies(): any {\n    return this._tippyTooltipStates;\n  }\n\n  hideTippy(name): void {\n    if (this._tippyTooltipStates.has(name)) {\n      this._tippyTooltipStates.get(name).popper._tippy.hide();\n    }\n  }\n}\n","import { Directive, Input, OnInit, ElementRef } from '@angular/core';\nimport tippy from 'tippy.js';\nimport { TippyService } from './Tippy.service';\n\n@Directive({\n  /* tslint:disable-next-line */\n  selector: '[appTippy]'\n})\nexport class TippyDirective implements OnInit {\n  @Input('tippyOptions') public tippyOptions: any;\n\n  constructor(private el: ElementRef, private tippyDirectiveService: TippyService) {\n    this.el = el;\n  }\n\n  public ngOnInit() {\n    const tippyInstance = tippy(this.el.nativeElement, this.tippyOptions || {}, true);\n\n    this.tippyDirectiveService.setTippyState(this.tippyOptions.name, tippyInstance.tooltips[0]);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TippyDirective } from './Tippy.directive';\nimport { TippyService } from './Tippy.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    TippyDirective\n  ],\n  exports: [\n    TippyDirective\n  ]\n})\nexport class TippyModule {\n  public static forRoot(config): ModuleWithProviders {\n    return {\n      ngModule: TippyModule,\n      providers: [\n        TippyService,\n        { provide: 'config', useValue: config }\n      ]\n    };\n  }\n}\n"],"names":["BehaviorSubject","Injectable","Directive","ElementRef","Input","NgModule","CommonModule"],"mappings":";;;;;;;;;;;;AAAA;;uCAOgC,IAAI,GAAG,EAAE;sCAClB,IAAIA,oBAAe,CAAC,IAAI,GAAG,EAAE,CAAC;;;;;;;QAEnD,oCAAa;;;;;YAAb,UAAc,IAAI,EAAE,KAAK;gBACvB,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;gBAC1C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;aACxD;;;;;QAED,oCAAa;;;;YAAb,UAAc,IAAI;gBAChB,OAAO,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;aACvF;;;;QAED,oCAAa;;;YAAb;gBACE,OAAO,IAAI,CAAC,mBAAmB,CAAC;aACjC;;;;;QAED,gCAAS;;;;YAAT,UAAU,IAAI;gBACZ,IAAI,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;oBACtC,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;iBACzD;aACF;;oBAxBFC,aAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;2BALD;;;;;;;ACAA;QAWE,wBAAoB,EAAc,EAAU,qBAAmC;YAA3D,OAAE,GAAF,EAAE,CAAY;YAAU,0BAAqB,GAArB,qBAAqB,CAAc;YAC7E,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;SACd;;;;QAEM,iCAAQ;;;;;gBACb,IAAM,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,YAAY,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC;gBAElF,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;;oBAd/FC,YAAS,SAAC;;wBAET,QAAQ,EAAE,YAAY;qBACvB;;;;;wBAPkCC,aAAU;wBAEpC,YAAY;;;;mCAOlBC,QAAK,SAAC,cAAc;;6BATvB;;;;;;;ACAA;;;;;;;QAiBgB,mBAAO;;;;sBAAC,MAAM;gBAC1B,OAAO;oBACL,QAAQ,EAAE,WAAW;oBACrB,SAAS,EAAE;wBACT,YAAY;wBACZ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE;qBACxC;iBACF,CAAC;;;oBAnBLC,WAAQ,SAAC;wBACR,OAAO,EAAE;4BACPC,mBAAY;yBACb;wBACD,YAAY,EAAE;4BACZ,cAAc;yBACf;wBACD,OAAO,EAAE;4BACP,cAAc;yBACf;qBACF;;0BAfD;;;;;;;;;;;;;;;;;;;;;;;;;"}
